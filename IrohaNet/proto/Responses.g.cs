// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: responses.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Iroha.Protocol {

  /// <summary>Holder for reflection information generated from responses.proto</summary>
  public static partial class ResponsesReflection {

    #region Descriptor
    /// <summary>File descriptor for responses.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResponsesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9yZXNwb25zZXMucHJvdG8SDmlyb2hhLnByb3RvY29sGgtibG9jay5wcm90",
            "bxoPcHJpbWl0aXZlLnByb3RvIj8KBUFzc2V0EhAKCGFzc2V0X2lkGAEgASgJ",
            "EhEKCWRvbWFpbl9pZBgCIAEoCRIRCglwcmVjaXNpb24YAyABKA0iUwoHQWNj",
            "b3VudBISCgphY2NvdW50X2lkGAEgASgJEhEKCWRvbWFpbl9pZBgCIAEoCRIO",
            "CgZxdW9ydW0YAyABKA0SEQoJanNvbl9kYXRhGAQgASgJIl0KDEFjY291bnRB",
            "c3NldBIQCghhc3NldF9pZBgBIAEoCRISCgphY2NvdW50X2lkGAIgASgJEicK",
            "B2JhbGFuY2UYAyABKAsyFi5pcm9oYS5wcm90b2NvbC5BbW91bnQiSwoUQWNj",
            "b3VudEFzc2V0UmVzcG9uc2USMwoNYWNjb3VudF9hc3NldBgBIAEoCzIcLmly",
            "b2hhLnByb3RvY29sLkFjY291bnRBc3NldCInChVBY2NvdW50RGV0YWlsUmVz",
            "cG9uc2USDgoGZGV0YWlsGAEgASgJIlIKD0FjY291bnRSZXNwb25zZRIoCgdh",
            "Y2NvdW50GAEgASgLMhcuaXJvaGEucHJvdG9jb2wuQWNjb3VudBIVCg1hY2Nv",
            "dW50X3JvbGVzGAIgAygJIjUKDUFzc2V0UmVzcG9uc2USJAoFYXNzZXQYASAB",
            "KAsyFS5pcm9oYS5wcm90b2NvbC5Bc3NldCIeCg1Sb2xlc1Jlc3BvbnNlEg0K",
            "BXJvbGVzGAEgAygJIi4KF1JvbGVQZXJtaXNzaW9uc1Jlc3BvbnNlEhMKC3Bl",
            "cm1pc3Npb25zGAEgAygJIpACCg1FcnJvclJlc3BvbnNlEjQKBnJlYXNvbhgB",
            "IAEoDjIkLmlyb2hhLnByb3RvY29sLkVycm9yUmVzcG9uc2UuUmVhc29uIsgB",
            "CgZSZWFzb24SFQoRU1RBVEVMRVNTX0lOVkFMSUQQABIUChBTVEFURUZVTF9J",
            "TlZBTElEEAESDgoKTk9fQUNDT1VOVBACEhUKEU5PX0FDQ09VTlRfQVNTRVRT",
            "EAMSFQoRTk9fQUNDT1VOVF9ERVRBSUwQBBISCg5OT19TSUdOQVRPUklFUxAF",
            "EhEKDU5PVF9TVVBQT1JURUQQBhIQCgxXUk9OR19GT1JNQVQQBxIMCghOT19B",
            "U1NFVBAIEgwKCE5PX1JPTEVTEAkiIwoTU2lnbmF0b3JpZXNSZXNwb25zZRIM",
            "CgRrZXlzGAEgAygMIkkKFFRyYW5zYWN0aW9uc1Jlc3BvbnNlEjEKDHRyYW5z",
            "YWN0aW9ucxgBIAMoCzIbLmlyb2hhLnByb3RvY29sLlRyYW5zYWN0aW9uIoQF",
            "Cg1RdWVyeVJlc3BvbnNlEkcKF2FjY291bnRfYXNzZXRzX3Jlc3BvbnNlGAEg",
            "ASgLMiQuaXJvaGEucHJvdG9jb2wuQWNjb3VudEFzc2V0UmVzcG9uc2VIABJI",
            "ChdhY2NvdW50X2RldGFpbF9yZXNwb25zZRgCIAEoCzIlLmlyb2hhLnByb3Rv",
            "Y29sLkFjY291bnREZXRhaWxSZXNwb25zZUgAEjsKEGFjY291bnRfcmVzcG9u",
            "c2UYAyABKAsyHy5pcm9oYS5wcm90b2NvbC5BY2NvdW50UmVzcG9uc2VIABI3",
            "Cg5lcnJvcl9yZXNwb25zZRgEIAEoCzIdLmlyb2hhLnByb3RvY29sLkVycm9y",
            "UmVzcG9uc2VIABJDChRzaWduYXRvcmllc19yZXNwb25zZRgFIAEoCzIjLmly",
            "b2hhLnByb3RvY29sLlNpZ25hdG9yaWVzUmVzcG9uc2VIABJFChV0cmFuc2Fj",
            "dGlvbnNfcmVzcG9uc2UYBiABKAsyJC5pcm9oYS5wcm90b2NvbC5UcmFuc2Fj",
            "dGlvbnNSZXNwb25zZUgAEjcKDmFzc2V0X3Jlc3BvbnNlGAcgASgLMh0uaXJv",
            "aGEucHJvdG9jb2wuQXNzZXRSZXNwb25zZUgAEjcKDnJvbGVzX3Jlc3BvbnNl",
            "GAggASgLMh0uaXJvaGEucHJvdG9jb2wuUm9sZXNSZXNwb25zZUgAEkwKGXJv",
            "bGVfcGVybWlzc2lvbnNfcmVzcG9uc2UYCSABKAsyJy5pcm9oYS5wcm90b2Nv",
            "bC5Sb2xlUGVybWlzc2lvbnNSZXNwb25zZUgAEhIKCnF1ZXJ5X2hhc2gYCiAB",
            "KAxCCgoIcmVzcG9uc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Iroha.Protocol.BlockReflection.Descriptor, global::Iroha.Protocol.PrimitiveReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.Asset), global::Iroha.Protocol.Asset.Parser, new[]{ "AssetId", "DomainId", "Precision" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.Account), global::Iroha.Protocol.Account.Parser, new[]{ "AccountId", "DomainId", "Quorum", "JsonData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.AccountAsset), global::Iroha.Protocol.AccountAsset.Parser, new[]{ "AssetId", "AccountId", "Balance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.AccountAssetResponse), global::Iroha.Protocol.AccountAssetResponse.Parser, new[]{ "AccountAsset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.AccountDetailResponse), global::Iroha.Protocol.AccountDetailResponse.Parser, new[]{ "Detail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.AccountResponse), global::Iroha.Protocol.AccountResponse.Parser, new[]{ "Account", "AccountRoles" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.AssetResponse), global::Iroha.Protocol.AssetResponse.Parser, new[]{ "Asset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.RolesResponse), global::Iroha.Protocol.RolesResponse.Parser, new[]{ "Roles" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.RolePermissionsResponse), global::Iroha.Protocol.RolePermissionsResponse.Parser, new[]{ "Permissions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.ErrorResponse), global::Iroha.Protocol.ErrorResponse.Parser, new[]{ "Reason" }, null, new[]{ typeof(global::Iroha.Protocol.ErrorResponse.Types.Reason) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.SignatoriesResponse), global::Iroha.Protocol.SignatoriesResponse.Parser, new[]{ "Keys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.TransactionsResponse), global::Iroha.Protocol.TransactionsResponse.Parser, new[]{ "Transactions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.QueryResponse), global::Iroha.Protocol.QueryResponse.Parser, new[]{ "AccountAssetsResponse", "AccountDetailResponse", "AccountResponse", "ErrorResponse", "SignatoriesResponse", "TransactionsResponse", "AssetResponse", "RolesResponse", "RolePermissionsResponse", "QueryHash" }, new[]{ "Response" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// *** WSV data structure *** //
  /// </summary>
  public sealed partial class Asset : pb::IMessage<Asset> {
    private static readonly pb::MessageParser<Asset> _parser = new pb::MessageParser<Asset>(() => new Asset());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Asset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset(Asset other) : this() {
      assetId_ = other.assetId_;
      domainId_ = other.domainId_;
      precision_ = other.precision_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset Clone() {
      return new Asset(this);
    }

    /// <summary>Field number for the "asset_id" field.</summary>
    public const int AssetIdFieldNumber = 1;
    private string assetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetId {
      get { return assetId_; }
      set {
        assetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "domain_id" field.</summary>
    public const int DomainIdFieldNumber = 2;
    private string domainId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DomainId {
      get { return domainId_; }
      set {
        domainId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 3;
    private uint precision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Precision {
      get { return precision_; }
      set {
        precision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Asset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Asset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssetId != other.AssetId) return false;
      if (DomainId != other.DomainId) return false;
      if (Precision != other.Precision) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssetId.Length != 0) hash ^= AssetId.GetHashCode();
      if (DomainId.Length != 0) hash ^= DomainId.GetHashCode();
      if (Precision != 0) hash ^= Precision.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AssetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AssetId);
      }
      if (DomainId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DomainId);
      }
      if (Precision != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Precision);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetId);
      }
      if (DomainId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainId);
      }
      if (Precision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Precision);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Asset other) {
      if (other == null) {
        return;
      }
      if (other.AssetId.Length != 0) {
        AssetId = other.AssetId;
      }
      if (other.DomainId.Length != 0) {
        DomainId = other.DomainId;
      }
      if (other.Precision != 0) {
        Precision = other.Precision;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AssetId = input.ReadString();
            break;
          }
          case 18: {
            DomainId = input.ReadString();
            break;
          }
          case 24: {
            Precision = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      accountId_ = other.accountId_;
      domainId_ = other.domainId_;
      quorum_ = other.quorum_;
      jsonData_ = other.jsonData_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private string accountId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "domain_id" field.</summary>
    public const int DomainIdFieldNumber = 2;
    private string domainId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DomainId {
      get { return domainId_; }
      set {
        domainId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quorum" field.</summary>
    public const int QuorumFieldNumber = 3;
    private uint quorum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quorum {
      get { return quorum_; }
      set {
        quorum_ = value;
      }
    }

    /// <summary>Field number for the "json_data" field.</summary>
    public const int JsonDataFieldNumber = 4;
    private string jsonData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonData {
      get { return jsonData_; }
      set {
        jsonData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (DomainId != other.DomainId) return false;
      if (Quorum != other.Quorum) return false;
      if (JsonData != other.JsonData) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (DomainId.Length != 0) hash ^= DomainId.GetHashCode();
      if (Quorum != 0) hash ^= Quorum.GetHashCode();
      if (JsonData.Length != 0) hash ^= JsonData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (DomainId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DomainId);
      }
      if (Quorum != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Quorum);
      }
      if (JsonData.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JsonData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
      }
      if (DomainId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainId);
      }
      if (Quorum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quorum);
      }
      if (JsonData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.DomainId.Length != 0) {
        DomainId = other.DomainId;
      }
      if (other.Quorum != 0) {
        Quorum = other.Quorum;
      }
      if (other.JsonData.Length != 0) {
        JsonData = other.JsonData;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 18: {
            DomainId = input.ReadString();
            break;
          }
          case 24: {
            Quorum = input.ReadUInt32();
            break;
          }
          case 34: {
            JsonData = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountAsset : pb::IMessage<AccountAsset> {
    private static readonly pb::MessageParser<AccountAsset> _parser = new pb::MessageParser<AccountAsset>(() => new AccountAsset());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountAsset(AccountAsset other) : this() {
      assetId_ = other.assetId_;
      accountId_ = other.accountId_;
      Balance = other.balance_ != null ? other.Balance.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountAsset Clone() {
      return new AccountAsset(this);
    }

    /// <summary>Field number for the "asset_id" field.</summary>
    public const int AssetIdFieldNumber = 1;
    private string assetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetId {
      get { return assetId_; }
      set {
        assetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private string accountId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 3;
    private global::Iroha.Protocol.Amount balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.Amount Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssetId != other.AssetId) return false;
      if (AccountId != other.AccountId) return false;
      if (!object.Equals(Balance, other.Balance)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssetId.Length != 0) hash ^= AssetId.GetHashCode();
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (balance_ != null) hash ^= Balance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AssetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AssetId);
      }
      if (AccountId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccountId);
      }
      if (balance_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Balance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetId);
      }
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
      }
      if (balance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountAsset other) {
      if (other == null) {
        return;
      }
      if (other.AssetId.Length != 0) {
        AssetId = other.AssetId;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          balance_ = new global::Iroha.Protocol.Amount();
        }
        Balance.MergeFrom(other.Balance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AssetId = input.ReadString();
            break;
          }
          case 18: {
            AccountId = input.ReadString();
            break;
          }
          case 26: {
            if (balance_ == null) {
              balance_ = new global::Iroha.Protocol.Amount();
            }
            input.ReadMessage(balance_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// *** Responses *** //
  /// </summary>
  public sealed partial class AccountAssetResponse : pb::IMessage<AccountAssetResponse> {
    private static readonly pb::MessageParser<AccountAssetResponse> _parser = new pb::MessageParser<AccountAssetResponse>(() => new AccountAssetResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountAssetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountAssetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountAssetResponse(AccountAssetResponse other) : this() {
      AccountAsset = other.accountAsset_ != null ? other.AccountAsset.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountAssetResponse Clone() {
      return new AccountAssetResponse(this);
    }

    /// <summary>Field number for the "account_asset" field.</summary>
    public const int AccountAssetFieldNumber = 1;
    private global::Iroha.Protocol.AccountAsset accountAsset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.AccountAsset AccountAsset {
      get { return accountAsset_; }
      set {
        accountAsset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountAssetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountAssetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountAsset, other.AccountAsset)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accountAsset_ != null) hash ^= AccountAsset.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accountAsset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountAsset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accountAsset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountAsset);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountAssetResponse other) {
      if (other == null) {
        return;
      }
      if (other.accountAsset_ != null) {
        if (accountAsset_ == null) {
          accountAsset_ = new global::Iroha.Protocol.AccountAsset();
        }
        AccountAsset.MergeFrom(other.AccountAsset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (accountAsset_ == null) {
              accountAsset_ = new global::Iroha.Protocol.AccountAsset();
            }
            input.ReadMessage(accountAsset_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountDetailResponse : pb::IMessage<AccountDetailResponse> {
    private static readonly pb::MessageParser<AccountDetailResponse> _parser = new pb::MessageParser<AccountDetailResponse>(() => new AccountDetailResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountDetailResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountDetailResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountDetailResponse(AccountDetailResponse other) : this() {
      detail_ = other.detail_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountDetailResponse Clone() {
      return new AccountDetailResponse(this);
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 1;
    private string detail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountDetailResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountDetailResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Detail != other.Detail) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Detail.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Detail);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountDetailResponse other) {
      if (other == null) {
        return;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Detail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountResponse : pb::IMessage<AccountResponse> {
    private static readonly pb::MessageParser<AccountResponse> _parser = new pb::MessageParser<AccountResponse>(() => new AccountResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResponse(AccountResponse other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      accountRoles_ = other.accountRoles_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResponse Clone() {
      return new AccountResponse(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Iroha.Protocol.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "account_roles" field.</summary>
    public const int AccountRolesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_accountRoles_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> accountRoles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AccountRoles {
      get { return accountRoles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if(!accountRoles_.Equals(other.accountRoles_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      hash ^= accountRoles_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      accountRoles_.WriteTo(output, _repeated_accountRoles_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      size += accountRoles_.CalculateSize(_repeated_accountRoles_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Iroha.Protocol.Account();
        }
        Account.MergeFrom(other.Account);
      }
      accountRoles_.Add(other.accountRoles_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::Iroha.Protocol.Account();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            accountRoles_.AddEntriesFrom(input, _repeated_accountRoles_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetResponse : pb::IMessage<AssetResponse> {
    private static readonly pb::MessageParser<AssetResponse> _parser = new pb::MessageParser<AssetResponse>(() => new AssetResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetResponse(AssetResponse other) : this() {
      Asset = other.asset_ != null ? other.Asset.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetResponse Clone() {
      return new AssetResponse(this);
    }

    /// <summary>Field number for the "asset" field.</summary>
    public const int AssetFieldNumber = 1;
    private global::Iroha.Protocol.Asset asset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.Asset Asset {
      get { return asset_; }
      set {
        asset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Asset, other.Asset)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (asset_ != null) hash ^= Asset.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (asset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Asset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (asset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Asset);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetResponse other) {
      if (other == null) {
        return;
      }
      if (other.asset_ != null) {
        if (asset_ == null) {
          asset_ = new global::Iroha.Protocol.Asset();
        }
        Asset.MergeFrom(other.Asset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (asset_ == null) {
              asset_ = new global::Iroha.Protocol.Asset();
            }
            input.ReadMessage(asset_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RolesResponse : pb::IMessage<RolesResponse> {
    private static readonly pb::MessageParser<RolesResponse> _parser = new pb::MessageParser<RolesResponse>(() => new RolesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RolesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolesResponse(RolesResponse other) : this() {
      roles_ = other.roles_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolesResponse Clone() {
      return new RolesResponse(this);
    }

    /// <summary>Field number for the "roles" field.</summary>
    public const int RolesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RolesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RolesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roles_.Equals(other.roles_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roles_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      roles_.WriteTo(output, _repeated_roles_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roles_.CalculateSize(_repeated_roles_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RolesResponse other) {
      if (other == null) {
        return;
      }
      roles_.Add(other.roles_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RolePermissionsResponse : pb::IMessage<RolePermissionsResponse> {
    private static readonly pb::MessageParser<RolePermissionsResponse> _parser = new pb::MessageParser<RolePermissionsResponse>(() => new RolePermissionsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RolePermissionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolePermissionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolePermissionsResponse(RolePermissionsResponse other) : this() {
      permissions_ = other.permissions_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolePermissionsResponse Clone() {
      return new RolePermissionsResponse(this);
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RolePermissionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RolePermissionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!permissions_.Equals(other.permissions_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= permissions_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      permissions_.WriteTo(output, _repeated_permissions_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RolePermissionsResponse other) {
      if (other == null) {
        return;
      }
      permissions_.Add(other.permissions_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ErrorResponse : pb::IMessage<ErrorResponse> {
    private static readonly pb::MessageParser<ErrorResponse> _parser = new pb::MessageParser<ErrorResponse>(() => new ErrorResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse(ErrorResponse other) : this() {
      reason_ = other.reason_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse Clone() {
      return new ErrorResponse(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private global::Iroha.Protocol.ErrorResponse.Types.Reason reason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.ErrorResponse.Types.Reason Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reason != 0) hash ^= Reason.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reason != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Reason);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            reason_ = (global::Iroha.Protocol.ErrorResponse.Types.Reason) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ErrorResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Reason {
        [pbr::OriginalName("STATELESS_INVALID")] StatelessInvalid = 0,
        [pbr::OriginalName("STATEFUL_INVALID")] StatefulInvalid = 1,
        /// <summary>
        /// when requested account does not exist
        /// </summary>
        [pbr::OriginalName("NO_ACCOUNT")] NoAccount = 2,
        /// <summary>
        /// when requested account asset does not exist
        /// </summary>
        [pbr::OriginalName("NO_ACCOUNT_ASSETS")] NoAccountAssets = 3,
        /// <summary>
        /// when requested account detail does not exist
        /// </summary>
        [pbr::OriginalName("NO_ACCOUNT_DETAIL")] NoAccountDetail = 4,
        /// <summary>
        /// when requested signatories does not exist
        /// </summary>
        [pbr::OriginalName("NO_SIGNATORIES")] NoSignatories = 5,
        /// <summary>
        /// when unidentified request was received
        /// </summary>
        [pbr::OriginalName("NOT_SUPPORTED")] NotSupported = 6,
        /// <summary>
        /// when json format wrong
        /// </summary>
        [pbr::OriginalName("WRONG_FORMAT")] WrongFormat = 7,
        /// <summary>
        /// when requested asset does not exist
        /// </summary>
        [pbr::OriginalName("NO_ASSET")] NoAsset = 8,
        /// <summary>
        /// when there are no roles defined in the system
        /// </summary>
        [pbr::OriginalName("NO_ROLES")] NoRoles = 9,
      }

    }
    #endregion

  }

  public sealed partial class SignatoriesResponse : pb::IMessage<SignatoriesResponse> {
    private static readonly pb::MessageParser<SignatoriesResponse> _parser = new pb::MessageParser<SignatoriesResponse>(() => new SignatoriesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignatoriesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatoriesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatoriesResponse(SignatoriesResponse other) : this() {
      keys_ = other.keys_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatoriesResponse Clone() {
      return new SignatoriesResponse(this);
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_keys_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> keys_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignatoriesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignatoriesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keys_.Equals(other.keys_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keys_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      keys_.WriteTo(output, _repeated_keys_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keys_.CalculateSize(_repeated_keys_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignatoriesResponse other) {
      if (other == null) {
        return;
      }
      keys_.Add(other.keys_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionsResponse : pb::IMessage<TransactionsResponse> {
    private static readonly pb::MessageParser<TransactionsResponse> _parser = new pb::MessageParser<TransactionsResponse>(() => new TransactionsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionsResponse(TransactionsResponse other) : this() {
      transactions_ = other.transactions_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionsResponse Clone() {
      return new TransactionsResponse(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Iroha.Protocol.Transaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Iroha.Protocol.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Iroha.Protocol.Transaction> transactions_ = new pbc::RepeatedField<global::Iroha.Protocol.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Iroha.Protocol.Transaction> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactions_.WriteTo(output, _repeated_transactions_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionsResponse other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse : pb::IMessage<QueryResponse> {
    private static readonly pb::MessageParser<QueryResponse> _parser = new pb::MessageParser<QueryResponse>(() => new QueryResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.ResponsesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse(QueryResponse other) : this() {
      queryHash_ = other.queryHash_;
      switch (other.ResponseCase) {
        case ResponseOneofCase.AccountAssetsResponse:
          AccountAssetsResponse = other.AccountAssetsResponse.Clone();
          break;
        case ResponseOneofCase.AccountDetailResponse:
          AccountDetailResponse = other.AccountDetailResponse.Clone();
          break;
        case ResponseOneofCase.AccountResponse:
          AccountResponse = other.AccountResponse.Clone();
          break;
        case ResponseOneofCase.ErrorResponse:
          ErrorResponse = other.ErrorResponse.Clone();
          break;
        case ResponseOneofCase.SignatoriesResponse:
          SignatoriesResponse = other.SignatoriesResponse.Clone();
          break;
        case ResponseOneofCase.TransactionsResponse:
          TransactionsResponse = other.TransactionsResponse.Clone();
          break;
        case ResponseOneofCase.AssetResponse:
          AssetResponse = other.AssetResponse.Clone();
          break;
        case ResponseOneofCase.RolesResponse:
          RolesResponse = other.RolesResponse.Clone();
          break;
        case ResponseOneofCase.RolePermissionsResponse:
          RolePermissionsResponse = other.RolePermissionsResponse.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse Clone() {
      return new QueryResponse(this);
    }

    /// <summary>Field number for the "account_assets_response" field.</summary>
    public const int AccountAssetsResponseFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.AccountAssetResponse AccountAssetsResponse {
      get { return responseCase_ == ResponseOneofCase.AccountAssetsResponse ? (global::Iroha.Protocol.AccountAssetResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.AccountAssetsResponse;
      }
    }

    /// <summary>Field number for the "account_detail_response" field.</summary>
    public const int AccountDetailResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.AccountDetailResponse AccountDetailResponse {
      get { return responseCase_ == ResponseOneofCase.AccountDetailResponse ? (global::Iroha.Protocol.AccountDetailResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.AccountDetailResponse;
      }
    }

    /// <summary>Field number for the "account_response" field.</summary>
    public const int AccountResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.AccountResponse AccountResponse {
      get { return responseCase_ == ResponseOneofCase.AccountResponse ? (global::Iroha.Protocol.AccountResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.AccountResponse;
      }
    }

    /// <summary>Field number for the "error_response" field.</summary>
    public const int ErrorResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.ErrorResponse ErrorResponse {
      get { return responseCase_ == ResponseOneofCase.ErrorResponse ? (global::Iroha.Protocol.ErrorResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.ErrorResponse;
      }
    }

    /// <summary>Field number for the "signatories_response" field.</summary>
    public const int SignatoriesResponseFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.SignatoriesResponse SignatoriesResponse {
      get { return responseCase_ == ResponseOneofCase.SignatoriesResponse ? (global::Iroha.Protocol.SignatoriesResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.SignatoriesResponse;
      }
    }

    /// <summary>Field number for the "transactions_response" field.</summary>
    public const int TransactionsResponseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.TransactionsResponse TransactionsResponse {
      get { return responseCase_ == ResponseOneofCase.TransactionsResponse ? (global::Iroha.Protocol.TransactionsResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.TransactionsResponse;
      }
    }

    /// <summary>Field number for the "asset_response" field.</summary>
    public const int AssetResponseFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.AssetResponse AssetResponse {
      get { return responseCase_ == ResponseOneofCase.AssetResponse ? (global::Iroha.Protocol.AssetResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.AssetResponse;
      }
    }

    /// <summary>Field number for the "roles_response" field.</summary>
    public const int RolesResponseFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.RolesResponse RolesResponse {
      get { return responseCase_ == ResponseOneofCase.RolesResponse ? (global::Iroha.Protocol.RolesResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.RolesResponse;
      }
    }

    /// <summary>Field number for the "role_permissions_response" field.</summary>
    public const int RolePermissionsResponseFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.RolePermissionsResponse RolePermissionsResponse {
      get { return responseCase_ == ResponseOneofCase.RolePermissionsResponse ? (global::Iroha.Protocol.RolePermissionsResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.RolePermissionsResponse;
      }
    }

    /// <summary>Field number for the "query_hash" field.</summary>
    public const int QueryHashFieldNumber = 10;
    private pb::ByteString queryHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString QueryHash {
      get { return queryHash_; }
      set {
        queryHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      AccountAssetsResponse = 1,
      AccountDetailResponse = 2,
      AccountResponse = 3,
      ErrorResponse = 4,
      SignatoriesResponse = 5,
      TransactionsResponse = 6,
      AssetResponse = 7,
      RolesResponse = 8,
      RolePermissionsResponse = 9,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountAssetsResponse, other.AccountAssetsResponse)) return false;
      if (!object.Equals(AccountDetailResponse, other.AccountDetailResponse)) return false;
      if (!object.Equals(AccountResponse, other.AccountResponse)) return false;
      if (!object.Equals(ErrorResponse, other.ErrorResponse)) return false;
      if (!object.Equals(SignatoriesResponse, other.SignatoriesResponse)) return false;
      if (!object.Equals(TransactionsResponse, other.TransactionsResponse)) return false;
      if (!object.Equals(AssetResponse, other.AssetResponse)) return false;
      if (!object.Equals(RolesResponse, other.RolesResponse)) return false;
      if (!object.Equals(RolePermissionsResponse, other.RolePermissionsResponse)) return false;
      if (QueryHash != other.QueryHash) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.AccountAssetsResponse) hash ^= AccountAssetsResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.AccountDetailResponse) hash ^= AccountDetailResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.AccountResponse) hash ^= AccountResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.ErrorResponse) hash ^= ErrorResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.SignatoriesResponse) hash ^= SignatoriesResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.TransactionsResponse) hash ^= TransactionsResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.AssetResponse) hash ^= AssetResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.RolesResponse) hash ^= RolesResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.RolePermissionsResponse) hash ^= RolePermissionsResponse.GetHashCode();
      if (QueryHash.Length != 0) hash ^= QueryHash.GetHashCode();
      hash ^= (int) responseCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseCase_ == ResponseOneofCase.AccountAssetsResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountAssetsResponse);
      }
      if (responseCase_ == ResponseOneofCase.AccountDetailResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(AccountDetailResponse);
      }
      if (responseCase_ == ResponseOneofCase.AccountResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(AccountResponse);
      }
      if (responseCase_ == ResponseOneofCase.ErrorResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(ErrorResponse);
      }
      if (responseCase_ == ResponseOneofCase.SignatoriesResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(SignatoriesResponse);
      }
      if (responseCase_ == ResponseOneofCase.TransactionsResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(TransactionsResponse);
      }
      if (responseCase_ == ResponseOneofCase.AssetResponse) {
        output.WriteRawTag(58);
        output.WriteMessage(AssetResponse);
      }
      if (responseCase_ == ResponseOneofCase.RolesResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(RolesResponse);
      }
      if (responseCase_ == ResponseOneofCase.RolePermissionsResponse) {
        output.WriteRawTag(74);
        output.WriteMessage(RolePermissionsResponse);
      }
      if (QueryHash.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(QueryHash);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.AccountAssetsResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountAssetsResponse);
      }
      if (responseCase_ == ResponseOneofCase.AccountDetailResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountDetailResponse);
      }
      if (responseCase_ == ResponseOneofCase.AccountResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountResponse);
      }
      if (responseCase_ == ResponseOneofCase.ErrorResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorResponse);
      }
      if (responseCase_ == ResponseOneofCase.SignatoriesResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SignatoriesResponse);
      }
      if (responseCase_ == ResponseOneofCase.TransactionsResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionsResponse);
      }
      if (responseCase_ == ResponseOneofCase.AssetResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssetResponse);
      }
      if (responseCase_ == ResponseOneofCase.RolesResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RolesResponse);
      }
      if (responseCase_ == ResponseOneofCase.RolePermissionsResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RolePermissionsResponse);
      }
      if (QueryHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(QueryHash);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse other) {
      if (other == null) {
        return;
      }
      if (other.QueryHash.Length != 0) {
        QueryHash = other.QueryHash;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.AccountAssetsResponse:
          if (AccountAssetsResponse == null) {
            AccountAssetsResponse = new global::Iroha.Protocol.AccountAssetResponse();
          }
          AccountAssetsResponse.MergeFrom(other.AccountAssetsResponse);
          break;
        case ResponseOneofCase.AccountDetailResponse:
          if (AccountDetailResponse == null) {
            AccountDetailResponse = new global::Iroha.Protocol.AccountDetailResponse();
          }
          AccountDetailResponse.MergeFrom(other.AccountDetailResponse);
          break;
        case ResponseOneofCase.AccountResponse:
          if (AccountResponse == null) {
            AccountResponse = new global::Iroha.Protocol.AccountResponse();
          }
          AccountResponse.MergeFrom(other.AccountResponse);
          break;
        case ResponseOneofCase.ErrorResponse:
          if (ErrorResponse == null) {
            ErrorResponse = new global::Iroha.Protocol.ErrorResponse();
          }
          ErrorResponse.MergeFrom(other.ErrorResponse);
          break;
        case ResponseOneofCase.SignatoriesResponse:
          if (SignatoriesResponse == null) {
            SignatoriesResponse = new global::Iroha.Protocol.SignatoriesResponse();
          }
          SignatoriesResponse.MergeFrom(other.SignatoriesResponse);
          break;
        case ResponseOneofCase.TransactionsResponse:
          if (TransactionsResponse == null) {
            TransactionsResponse = new global::Iroha.Protocol.TransactionsResponse();
          }
          TransactionsResponse.MergeFrom(other.TransactionsResponse);
          break;
        case ResponseOneofCase.AssetResponse:
          if (AssetResponse == null) {
            AssetResponse = new global::Iroha.Protocol.AssetResponse();
          }
          AssetResponse.MergeFrom(other.AssetResponse);
          break;
        case ResponseOneofCase.RolesResponse:
          if (RolesResponse == null) {
            RolesResponse = new global::Iroha.Protocol.RolesResponse();
          }
          RolesResponse.MergeFrom(other.RolesResponse);
          break;
        case ResponseOneofCase.RolePermissionsResponse:
          if (RolePermissionsResponse == null) {
            RolePermissionsResponse = new global::Iroha.Protocol.RolePermissionsResponse();
          }
          RolePermissionsResponse.MergeFrom(other.RolePermissionsResponse);
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Iroha.Protocol.AccountAssetResponse subBuilder = new global::Iroha.Protocol.AccountAssetResponse();
            if (responseCase_ == ResponseOneofCase.AccountAssetsResponse) {
              subBuilder.MergeFrom(AccountAssetsResponse);
            }
            input.ReadMessage(subBuilder);
            AccountAssetsResponse = subBuilder;
            break;
          }
          case 18: {
            global::Iroha.Protocol.AccountDetailResponse subBuilder = new global::Iroha.Protocol.AccountDetailResponse();
            if (responseCase_ == ResponseOneofCase.AccountDetailResponse) {
              subBuilder.MergeFrom(AccountDetailResponse);
            }
            input.ReadMessage(subBuilder);
            AccountDetailResponse = subBuilder;
            break;
          }
          case 26: {
            global::Iroha.Protocol.AccountResponse subBuilder = new global::Iroha.Protocol.AccountResponse();
            if (responseCase_ == ResponseOneofCase.AccountResponse) {
              subBuilder.MergeFrom(AccountResponse);
            }
            input.ReadMessage(subBuilder);
            AccountResponse = subBuilder;
            break;
          }
          case 34: {
            global::Iroha.Protocol.ErrorResponse subBuilder = new global::Iroha.Protocol.ErrorResponse();
            if (responseCase_ == ResponseOneofCase.ErrorResponse) {
              subBuilder.MergeFrom(ErrorResponse);
            }
            input.ReadMessage(subBuilder);
            ErrorResponse = subBuilder;
            break;
          }
          case 42: {
            global::Iroha.Protocol.SignatoriesResponse subBuilder = new global::Iroha.Protocol.SignatoriesResponse();
            if (responseCase_ == ResponseOneofCase.SignatoriesResponse) {
              subBuilder.MergeFrom(SignatoriesResponse);
            }
            input.ReadMessage(subBuilder);
            SignatoriesResponse = subBuilder;
            break;
          }
          case 50: {
            global::Iroha.Protocol.TransactionsResponse subBuilder = new global::Iroha.Protocol.TransactionsResponse();
            if (responseCase_ == ResponseOneofCase.TransactionsResponse) {
              subBuilder.MergeFrom(TransactionsResponse);
            }
            input.ReadMessage(subBuilder);
            TransactionsResponse = subBuilder;
            break;
          }
          case 58: {
            global::Iroha.Protocol.AssetResponse subBuilder = new global::Iroha.Protocol.AssetResponse();
            if (responseCase_ == ResponseOneofCase.AssetResponse) {
              subBuilder.MergeFrom(AssetResponse);
            }
            input.ReadMessage(subBuilder);
            AssetResponse = subBuilder;
            break;
          }
          case 66: {
            global::Iroha.Protocol.RolesResponse subBuilder = new global::Iroha.Protocol.RolesResponse();
            if (responseCase_ == ResponseOneofCase.RolesResponse) {
              subBuilder.MergeFrom(RolesResponse);
            }
            input.ReadMessage(subBuilder);
            RolesResponse = subBuilder;
            break;
          }
          case 74: {
            global::Iroha.Protocol.RolePermissionsResponse subBuilder = new global::Iroha.Protocol.RolePermissionsResponse();
            if (responseCase_ == ResponseOneofCase.RolePermissionsResponse) {
              subBuilder.MergeFrom(RolePermissionsResponse);
            }
            input.ReadMessage(subBuilder);
            RolePermissionsResponse = subBuilder;
            break;
          }
          case 82: {
            QueryHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
