// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yac.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Iroha.Consensus.Yac.Proto {
  public static partial class Yac
  {
    static readonly string __ServiceName = "iroha.consensus.yac.proto.Yac";

    static readonly grpc::Marshaller<global::Iroha.Consensus.Yac.Proto.Vote> __Marshaller_Vote = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Consensus.Yac.Proto.Vote.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Iroha.Consensus.Yac.Proto.Commit> __Marshaller_Commit = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Consensus.Yac.Proto.Commit.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Iroha.Consensus.Yac.Proto.Reject> __Marshaller_Reject = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Consensus.Yac.Proto.Reject.Parser.ParseFrom);

    static readonly grpc::Method<global::Iroha.Consensus.Yac.Proto.Vote, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SendVote = new grpc::Method<global::Iroha.Consensus.Yac.Proto.Vote, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendVote",
        __Marshaller_Vote,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Iroha.Consensus.Yac.Proto.Commit, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SendCommit = new grpc::Method<global::Iroha.Consensus.Yac.Proto.Commit, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendCommit",
        __Marshaller_Commit,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Iroha.Consensus.Yac.Proto.Reject, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SendReject = new grpc::Method<global::Iroha.Consensus.Yac.Proto.Reject, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendReject",
        __Marshaller_Reject,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Iroha.Consensus.Yac.Proto.YacReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Yac</summary>
    public abstract partial class YacBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SendVote(global::Iroha.Consensus.Yac.Proto.Vote request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SendCommit(global::Iroha.Consensus.Yac.Proto.Commit request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SendReject(global::Iroha.Consensus.Yac.Proto.Reject request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Yac</summary>
    public partial class YacClient : grpc::ClientBase<YacClient>
    {
      /// <summary>Creates a new client for Yac</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public YacClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Yac that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public YacClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected YacClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected YacClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendVote(global::Iroha.Consensus.Yac.Proto.Vote request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendVote(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendVote(global::Iroha.Consensus.Yac.Proto.Vote request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendVote, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendVoteAsync(global::Iroha.Consensus.Yac.Proto.Vote request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendVoteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendVoteAsync(global::Iroha.Consensus.Yac.Proto.Vote request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendVote, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendCommit(global::Iroha.Consensus.Yac.Proto.Commit request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendCommit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendCommit(global::Iroha.Consensus.Yac.Proto.Commit request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendCommit, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendCommitAsync(global::Iroha.Consensus.Yac.Proto.Commit request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendCommitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendCommitAsync(global::Iroha.Consensus.Yac.Proto.Commit request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendCommit, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendReject(global::Iroha.Consensus.Yac.Proto.Reject request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendReject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendReject(global::Iroha.Consensus.Yac.Proto.Reject request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendReject, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendRejectAsync(global::Iroha.Consensus.Yac.Proto.Reject request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendRejectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendRejectAsync(global::Iroha.Consensus.Yac.Proto.Reject request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendReject, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override YacClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new YacClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(YacBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SendVote, serviceImpl.SendVote)
          .AddMethod(__Method_SendCommit, serviceImpl.SendCommit)
          .AddMethod(__Method_SendReject, serviceImpl.SendReject).Build();
    }

  }
}
#endregion
