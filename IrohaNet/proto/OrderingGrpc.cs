// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ordering.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Iroha.Ordering.Proto {
  public static partial class OrderingGateTransportGrpc
  {
    static readonly string __ServiceName = "iroha.ordering.proto.OrderingGateTransportGrpc";

    static readonly grpc::Marshaller<global::Iroha.Ordering.Proto.Proposal> __Marshaller_Proposal = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Ordering.Proto.Proposal.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::Iroha.Ordering.Proto.Proposal, global::Google.Protobuf.WellKnownTypes.Empty> __Method_onProposal = new grpc::Method<global::Iroha.Ordering.Proto.Proposal, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "onProposal",
        __Marshaller_Proposal,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Iroha.Ordering.Proto.OrderingReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of OrderingGateTransportGrpc</summary>
    public abstract partial class OrderingGateTransportGrpcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> onProposal(global::Iroha.Ordering.Proto.Proposal request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for OrderingGateTransportGrpc</summary>
    public partial class OrderingGateTransportGrpcClient : grpc::ClientBase<OrderingGateTransportGrpcClient>
    {
      /// <summary>Creates a new client for OrderingGateTransportGrpc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public OrderingGateTransportGrpcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OrderingGateTransportGrpc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public OrderingGateTransportGrpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected OrderingGateTransportGrpcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected OrderingGateTransportGrpcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty onProposal(global::Iroha.Ordering.Proto.Proposal request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return onProposal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty onProposal(global::Iroha.Ordering.Proto.Proposal request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_onProposal, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> onProposalAsync(global::Iroha.Ordering.Proto.Proposal request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return onProposalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> onProposalAsync(global::Iroha.Ordering.Proto.Proposal request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_onProposal, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override OrderingGateTransportGrpcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OrderingGateTransportGrpcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(OrderingGateTransportGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_onProposal, serviceImpl.onProposal).Build();
    }

  }
  public static partial class OrderingServiceTransportGrpc
  {
    static readonly string __ServiceName = "iroha.ordering.proto.OrderingServiceTransportGrpc";

    static readonly grpc::Marshaller<global::Iroha.Protocol.Transaction> __Marshaller_Transaction = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Protocol.Transaction.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::Iroha.Protocol.Transaction, global::Google.Protobuf.WellKnownTypes.Empty> __Method_onTransaction = new grpc::Method<global::Iroha.Protocol.Transaction, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "onTransaction",
        __Marshaller_Transaction,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Iroha.Ordering.Proto.OrderingReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of OrderingServiceTransportGrpc</summary>
    public abstract partial class OrderingServiceTransportGrpcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> onTransaction(global::Iroha.Protocol.Transaction request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for OrderingServiceTransportGrpc</summary>
    public partial class OrderingServiceTransportGrpcClient : grpc::ClientBase<OrderingServiceTransportGrpcClient>
    {
      /// <summary>Creates a new client for OrderingServiceTransportGrpc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public OrderingServiceTransportGrpcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OrderingServiceTransportGrpc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public OrderingServiceTransportGrpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected OrderingServiceTransportGrpcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected OrderingServiceTransportGrpcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty onTransaction(global::Iroha.Protocol.Transaction request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return onTransaction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty onTransaction(global::Iroha.Protocol.Transaction request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_onTransaction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> onTransactionAsync(global::Iroha.Protocol.Transaction request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return onTransactionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> onTransactionAsync(global::Iroha.Protocol.Transaction request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_onTransaction, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override OrderingServiceTransportGrpcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OrderingServiceTransportGrpcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(OrderingServiceTransportGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_onTransaction, serviceImpl.onTransaction).Build();
    }

  }
}
#endregion
