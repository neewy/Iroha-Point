// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primitive.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Iroha.Protocol {

  /// <summary>Holder for reflection information generated from primitive.proto</summary>
  public static partial class PrimitiveReflection {

    #region Descriptor
    /// <summary>File descriptor for primitive.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PrimitiveReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9wcmltaXRpdmUucHJvdG8SDmlyb2hhLnByb3RvY29sIi4KCVNpZ25hdHVy",
            "ZRIOCgZwdWJrZXkYASABKAwSEQoJc2lnbmF0dXJlGAIgASgMIkcKB3VpbnQy",
            "NTYSDQoFZmlyc3QYASABKAQSDgoGc2Vjb25kGAIgASgEEg0KBXRoaXJkGAMg",
            "ASgEEg4KBmZvdXJ0aBgEIAEoBCJDCgZBbW91bnQSJgoFdmFsdWUYASABKAsy",
            "Fy5pcm9oYS5wcm90b2NvbC51aW50MjU2EhEKCXByZWNpc2lvbhgCIAEoDSqb",
            "BgoOUm9sZVBlcm1pc3Npb24SEwoPY2FuX2FwcGVuZF9yb2xlEAASEwoPY2Fu",
            "X2RldGFjaF9yb2xlEB8SEwoPY2FuX2NyZWF0ZV9yb2xlEAESFQoRY2FuX2Fk",
            "ZF9hc3NldF9xdHkQAhIQCgxjYW5fYWRkX3BlZXIQAxIVChFjYW5fYWRkX3Np",
            "Z25hdG9yeRAEEhYKEmNhbl9jcmVhdGVfYWNjb3VudBAFEhQKEGNhbl9jcmVh",
            "dGVfYXNzZXQQBhIVChFjYW5fY3JlYXRlX2RvbWFpbhAHEhgKFGNhbl9yZW1v",
            "dmVfc2lnbmF0b3J5EAgSEgoOY2FuX3NldF9xdW9ydW0QCRIQCgxjYW5fdHJh",
            "bnNmZXIQChIPCgtjYW5fcmVjZWl2ZRALEhoKFmNhbl9zdWJ0cmFjdF9hc3Nl",
            "dF9xdHkQDBITCg9jYW5fcmVhZF9hc3NldHMQDRIRCg1jYW5fZ2V0X3JvbGVz",
            "EA4SFgoSY2FuX2dldF9teV9hY2NvdW50EA8SGAoUY2FuX2dldF9hbGxfYWNj",
            "b3VudHMQEBIaChZjYW5fZ2V0X215X3NpZ25hdG9yaWVzEBESGwoXY2FuX2dl",
            "dF9hbGxfc2lnbmF0b3JpZXMQEhIWChJjYW5fZ2V0X215X2FjY19hc3QQExIZ",
            "ChVjYW5fZ2V0X215X2FjY19kZXRhaWwQFBIXChNjYW5fZ2V0X2FsbF9hY2Nf",
            "YXN0EBUSFgoSY2FuX2dldF9teV9hY2NfdHhzEBYSFwoTY2FuX2dldF9hbGxf",
            "YWNjX3R4cxAXEhoKFmNhbl9nZXRfbXlfYWNjX2FzdF90eHMQGBIbChdjYW5f",
            "Z2V0X2FsbF9hY2NfYXN0X3R4cxAZEhsKF2Nhbl9ncmFudF9hZGRfc2lnbmF0",
            "b3J5EBoSHgoaY2FuX2dyYW50X3JlbW92ZV9zaWduYXRvcnkQGxIYChRjYW5f",
            "Z3JhbnRfc2V0X3F1b3J1bRAcEhoKFmNhbl9ncmFudF9jYW5fdHJhbnNmZXIQ",
            "HRIcChhjYW5fZ3JhbnRfY2FuX3NldF9kZXRhaWwQHiqCAQoTR3JhbnRhYmxl",
            "UGVybWlzc2lvbhIYChRjYW5fYWRkX215X3NpZ25hdG9yeRAAEhsKF2Nhbl9y",
            "ZW1vdmVfbXlfc2lnbmF0b3J5EAESFQoRY2FuX3NldF9teV9xdW9ydW0QAhId",
            "ChljYW5fc2V0X215X2FjY291bnRfZGV0YWlsEANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Iroha.Protocol.RolePermission), typeof(global::Iroha.Protocol.GrantablePermission), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.Signature), global::Iroha.Protocol.Signature.Parser, new[]{ "Pubkey", "Signature_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.uint256), global::Iroha.Protocol.uint256.Parser, new[]{ "First", "Second", "Third", "Fourth" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iroha.Protocol.Amount), global::Iroha.Protocol.Amount.Parser, new[]{ "Value", "Precision" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RolePermission {
    /// <summary>
    /// Command Permissions
    /// </summary>
    [pbr::OriginalName("can_append_role")] CanAppendRole = 0,
    [pbr::OriginalName("can_detach_role")] CanDetachRole = 31,
    [pbr::OriginalName("can_create_role")] CanCreateRole = 1,
    [pbr::OriginalName("can_add_asset_qty")] CanAddAssetQty = 2,
    [pbr::OriginalName("can_add_peer")] CanAddPeer = 3,
    [pbr::OriginalName("can_add_signatory")] CanAddSignatory = 4,
    [pbr::OriginalName("can_create_account")] CanCreateAccount = 5,
    [pbr::OriginalName("can_create_asset")] CanCreateAsset = 6,
    [pbr::OriginalName("can_create_domain")] CanCreateDomain = 7,
    [pbr::OriginalName("can_remove_signatory")] CanRemoveSignatory = 8,
    [pbr::OriginalName("can_set_quorum")] CanSetQuorum = 9,
    [pbr::OriginalName("can_transfer")] CanTransfer = 10,
    [pbr::OriginalName("can_receive")] CanReceive = 11,
    [pbr::OriginalName("can_subtract_asset_qty")] CanSubtractAssetQty = 12,
    /// <summary>
    /// Query permissions
    /// </summary>
    [pbr::OriginalName("can_read_assets")] CanReadAssets = 13,
    [pbr::OriginalName("can_get_roles")] CanGetRoles = 14,
    [pbr::OriginalName("can_get_my_account")] CanGetMyAccount = 15,
    [pbr::OriginalName("can_get_all_accounts")] CanGetAllAccounts = 16,
    [pbr::OriginalName("can_get_my_signatories")] CanGetMySignatories = 17,
    [pbr::OriginalName("can_get_all_signatories")] CanGetAllSignatories = 18,
    [pbr::OriginalName("can_get_my_acc_ast")] CanGetMyAccAst = 19,
    [pbr::OriginalName("can_get_my_acc_detail")] CanGetMyAccDetail = 20,
    [pbr::OriginalName("can_get_all_acc_ast")] CanGetAllAccAst = 21,
    [pbr::OriginalName("can_get_my_acc_txs")] CanGetMyAccTxs = 22,
    [pbr::OriginalName("can_get_all_acc_txs")] CanGetAllAccTxs = 23,
    [pbr::OriginalName("can_get_my_acc_ast_txs")] CanGetMyAccAstTxs = 24,
    [pbr::OriginalName("can_get_all_acc_ast_txs")] CanGetAllAccAstTxs = 25,
    /// <summary>
    /// Grant permissions
    /// </summary>
    [pbr::OriginalName("can_grant_add_signatory")] CanGrantAddSignatory = 26,
    [pbr::OriginalName("can_grant_remove_signatory")] CanGrantRemoveSignatory = 27,
    [pbr::OriginalName("can_grant_set_quorum")] CanGrantSetQuorum = 28,
    [pbr::OriginalName("can_grant_can_transfer")] CanGrantCanTransfer = 29,
    [pbr::OriginalName("can_grant_can_set_detail")] CanGrantCanSetDetail = 30,
  }

  public enum GrantablePermission {
    [pbr::OriginalName("can_add_my_signatory")] CanAddMySignatory = 0,
    [pbr::OriginalName("can_remove_my_signatory")] CanRemoveMySignatory = 1,
    [pbr::OriginalName("can_set_my_quorum")] CanSetMyQuorum = 2,
    [pbr::OriginalName("can_set_my_account_detail")] CanSetMyAccountDetail = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Signature : pb::IMessage<Signature> {
    private static readonly pb::MessageParser<Signature> _parser = new pb::MessageParser<Signature>(() => new Signature());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Signature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.PrimitiveReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signature(Signature other) : this() {
      pubkey_ = other.pubkey_;
      signature_ = other.signature_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signature Clone() {
      return new Signature(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private pb::ByteString pubkey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int Signature_FieldNumber = 2;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature_ {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Signature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Signature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      if (Signature_ != other.Signature_) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (Signature_.Length != 0) hash ^= Signature_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Pubkey);
      }
      if (Signature_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature_);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pubkey);
      }
      if (Signature_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature_);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Signature other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.Signature_.Length != 0) {
        Signature_ = other.Signature_;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Pubkey = input.ReadBytes();
            break;
          }
          case 18: {
            Signature_ = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class uint256 : pb::IMessage<uint256> {
    private static readonly pb::MessageParser<uint256> _parser = new pb::MessageParser<uint256>(() => new uint256());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<uint256> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.PrimitiveReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint256() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint256(uint256 other) : this() {
      first_ = other.first_;
      second_ = other.second_;
      third_ = other.third_;
      fourth_ = other.fourth_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint256 Clone() {
      return new uint256(this);
    }

    /// <summary>Field number for the "first" field.</summary>
    public const int FirstFieldNumber = 1;
    private ulong first_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong First {
      get { return first_; }
      set {
        first_ = value;
      }
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 2;
    private ulong second_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Second {
      get { return second_; }
      set {
        second_ = value;
      }
    }

    /// <summary>Field number for the "third" field.</summary>
    public const int ThirdFieldNumber = 3;
    private ulong third_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Third {
      get { return third_; }
      set {
        third_ = value;
      }
    }

    /// <summary>Field number for the "fourth" field.</summary>
    public const int FourthFieldNumber = 4;
    private ulong fourth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Fourth {
      get { return fourth_; }
      set {
        fourth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as uint256);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(uint256 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (First != other.First) return false;
      if (Second != other.Second) return false;
      if (Third != other.Third) return false;
      if (Fourth != other.Fourth) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (First != 0UL) hash ^= First.GetHashCode();
      if (Second != 0UL) hash ^= Second.GetHashCode();
      if (Third != 0UL) hash ^= Third.GetHashCode();
      if (Fourth != 0UL) hash ^= Fourth.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (First != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(First);
      }
      if (Second != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Second);
      }
      if (Third != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Third);
      }
      if (Fourth != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Fourth);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (First != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(First);
      }
      if (Second != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Second);
      }
      if (Third != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Third);
      }
      if (Fourth != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Fourth);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(uint256 other) {
      if (other == null) {
        return;
      }
      if (other.First != 0UL) {
        First = other.First;
      }
      if (other.Second != 0UL) {
        Second = other.Second;
      }
      if (other.Third != 0UL) {
        Third = other.Third;
      }
      if (other.Fourth != 0UL) {
        Fourth = other.Fourth;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            First = input.ReadUInt64();
            break;
          }
          case 16: {
            Second = input.ReadUInt64();
            break;
          }
          case 24: {
            Third = input.ReadUInt64();
            break;
          }
          case 32: {
            Fourth = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Amount : pb::IMessage<Amount> {
    private static readonly pb::MessageParser<Amount> _parser = new pb::MessageParser<Amount>(() => new Amount());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Amount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iroha.Protocol.PrimitiveReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Amount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Amount(Amount other) : this() {
      Value = other.value_ != null ? other.Value.Clone() : null;
      precision_ = other.precision_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Amount Clone() {
      return new Amount(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Iroha.Protocol.uint256 value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Iroha.Protocol.uint256 Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 2;
    private uint precision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Precision {
      get { return precision_; }
      set {
        precision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Amount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Amount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      if (Precision != other.Precision) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (Precision != 0) hash ^= Precision.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (Precision != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Precision);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (Precision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Precision);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Amount other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Iroha.Protocol.uint256();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.Precision != 0) {
        Precision = other.Precision;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (value_ == null) {
              value_ = new global::Iroha.Protocol.uint256();
            }
            input.ReadMessage(value_);
            break;
          }
          case 16: {
            Precision = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
