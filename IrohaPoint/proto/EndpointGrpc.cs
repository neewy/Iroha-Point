// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: endpoint.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Iroha.Protocol {
  public static partial class CommandService
  {
    static readonly string __ServiceName = "iroha.protocol.CommandService";

    static readonly grpc::Marshaller<global::Iroha.Protocol.Transaction> __Marshaller_Transaction = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Protocol.Transaction.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Iroha.Protocol.TxStatusRequest> __Marshaller_TxStatusRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Protocol.TxStatusRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Iroha.Protocol.ToriiResponse> __Marshaller_ToriiResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Protocol.ToriiResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Iroha.Protocol.Transaction, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Torii = new grpc::Method<global::Iroha.Protocol.Transaction, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Torii",
        __Marshaller_Transaction,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Iroha.Protocol.TxStatusRequest, global::Iroha.Protocol.ToriiResponse> __Method_Status = new grpc::Method<global::Iroha.Protocol.TxStatusRequest, global::Iroha.Protocol.ToriiResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Status",
        __Marshaller_TxStatusRequest,
        __Marshaller_ToriiResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Iroha.Protocol.EndpointReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CommandService</summary>
    public abstract partial class CommandServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Torii(global::Iroha.Protocol.Transaction request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Iroha.Protocol.ToriiResponse> Status(global::Iroha.Protocol.TxStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CommandService</summary>
    public partial class CommandServiceClient : grpc::ClientBase<CommandServiceClient>
    {
      /// <summary>Creates a new client for CommandService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CommandServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CommandService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CommandServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CommandServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CommandServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Torii(global::Iroha.Protocol.Transaction request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Torii(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Torii(global::Iroha.Protocol.Transaction request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Torii, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ToriiAsync(global::Iroha.Protocol.Transaction request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ToriiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ToriiAsync(global::Iroha.Protocol.Transaction request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Torii, null, options, request);
      }
      public virtual global::Iroha.Protocol.ToriiResponse Status(global::Iroha.Protocol.TxStatusRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Status(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Iroha.Protocol.ToriiResponse Status(global::Iroha.Protocol.TxStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Status, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Iroha.Protocol.ToriiResponse> StatusAsync(global::Iroha.Protocol.TxStatusRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Iroha.Protocol.ToriiResponse> StatusAsync(global::Iroha.Protocol.TxStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Status, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CommandServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CommandServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CommandServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Torii, serviceImpl.Torii)
          .AddMethod(__Method_Status, serviceImpl.Status).Build();
    }

  }
  public static partial class QueryService
  {
    static readonly string __ServiceName = "iroha.protocol.QueryService";

    static readonly grpc::Marshaller<global::Iroha.Protocol.Query> __Marshaller_Query = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Protocol.Query.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Iroha.Protocol.QueryResponse> __Marshaller_QueryResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Protocol.QueryResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Iroha.Protocol.Query, global::Iroha.Protocol.QueryResponse> __Method_Find = new grpc::Method<global::Iroha.Protocol.Query, global::Iroha.Protocol.QueryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Find",
        __Marshaller_Query,
        __Marshaller_QueryResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Iroha.Protocol.EndpointReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of QueryService</summary>
    public abstract partial class QueryServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Iroha.Protocol.QueryResponse> Find(global::Iroha.Protocol.Query request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for QueryService</summary>
    public partial class QueryServiceClient : grpc::ClientBase<QueryServiceClient>
    {
      /// <summary>Creates a new client for QueryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public QueryServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for QueryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public QueryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected QueryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected QueryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Iroha.Protocol.QueryResponse Find(global::Iroha.Protocol.Query request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Find(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Iroha.Protocol.QueryResponse Find(global::Iroha.Protocol.Query request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Find, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Iroha.Protocol.QueryResponse> FindAsync(global::Iroha.Protocol.Query request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return FindAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Iroha.Protocol.QueryResponse> FindAsync(global::Iroha.Protocol.Query request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Find, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override QueryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(QueryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Find, serviceImpl.Find).Build();
    }

  }
  public static partial class GenesisBlockService
  {
    static readonly string __ServiceName = "iroha.protocol.GenesisBlockService";

    static readonly grpc::Marshaller<global::Iroha.Protocol.Block> __Marshaller_Block = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Protocol.Block.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Iroha.Protocol.ApplyGenesisBlockResponse> __Marshaller_ApplyGenesisBlockResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Iroha.Protocol.ApplyGenesisBlockResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::Iroha.Protocol.Block, global::Iroha.Protocol.ApplyGenesisBlockResponse> __Method_SendGenesisBlock = new grpc::Method<global::Iroha.Protocol.Block, global::Iroha.Protocol.ApplyGenesisBlockResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendGenesisBlock",
        __Marshaller_Block,
        __Marshaller_ApplyGenesisBlockResponse);

    static readonly grpc::Method<global::Iroha.Protocol.Block, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SendAbortGenesisBlock = new grpc::Method<global::Iroha.Protocol.Block, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendAbortGenesisBlock",
        __Marshaller_Block,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Iroha.Protocol.EndpointReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of GenesisBlockService</summary>
    public abstract partial class GenesisBlockServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Iroha.Protocol.ApplyGenesisBlockResponse> SendGenesisBlock(global::Iroha.Protocol.Block request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SendAbortGenesisBlock(global::Iroha.Protocol.Block request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GenesisBlockService</summary>
    public partial class GenesisBlockServiceClient : grpc::ClientBase<GenesisBlockServiceClient>
    {
      /// <summary>Creates a new client for GenesisBlockService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GenesisBlockServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GenesisBlockService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GenesisBlockServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GenesisBlockServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GenesisBlockServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Iroha.Protocol.ApplyGenesisBlockResponse SendGenesisBlock(global::Iroha.Protocol.Block request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendGenesisBlock(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Iroha.Protocol.ApplyGenesisBlockResponse SendGenesisBlock(global::Iroha.Protocol.Block request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendGenesisBlock, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Iroha.Protocol.ApplyGenesisBlockResponse> SendGenesisBlockAsync(global::Iroha.Protocol.Block request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendGenesisBlockAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Iroha.Protocol.ApplyGenesisBlockResponse> SendGenesisBlockAsync(global::Iroha.Protocol.Block request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendGenesisBlock, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendAbortGenesisBlock(global::Iroha.Protocol.Block request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendAbortGenesisBlock(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendAbortGenesisBlock(global::Iroha.Protocol.Block request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendAbortGenesisBlock, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendAbortGenesisBlockAsync(global::Iroha.Protocol.Block request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendAbortGenesisBlockAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendAbortGenesisBlockAsync(global::Iroha.Protocol.Block request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendAbortGenesisBlock, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GenesisBlockServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GenesisBlockServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GenesisBlockServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SendGenesisBlock, serviceImpl.SendGenesisBlock)
          .AddMethod(__Method_SendAbortGenesisBlock, serviceImpl.SendAbortGenesisBlock).Build();
    }

  }
}
#endregion
